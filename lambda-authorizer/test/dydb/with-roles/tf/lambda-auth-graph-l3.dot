digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.lambda_authz.aws_api_gateway_authorizer.api_gw_authorizer (expand)" [label = "module.lambda_authz.aws_api_gateway_authorizer.api_gw_authorizer", shape = "box"]
		"[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)" [label = "module.lambda_authz.aws_dynamodb_table.dydb_authz", shape = "box"]
		"[root] module.lambda_authz.aws_dynamodb_table_item.dydb_app_role_map (expand)" [label = "module.lambda_authz.aws_dynamodb_table_item.dydb_app_role_map", shape = "box"]
		"[root] module.lambda_authz.aws_lambda_code_signing_config.lambda_csc (expand)" [label = "module.lambda_authz.aws_lambda_code_signing_config.lambda_csc", shape = "box"]
		"[root] module.lambda_authz.aws_lambda_function.lambda_authz (expand)" [label = "module.lambda_authz.aws_lambda_function.lambda_authz", shape = "box"]
		"[root] module.lambda_authz.aws_lambda_permission.api_gw_lambda_permission (expand)" [label = "module.lambda_authz.aws_lambda_permission.api_gw_lambda_permission", shape = "box"]
		"[root] module.lambda_authz.data.aws_caller_identity.current (expand)" [label = "module.lambda_authz.data.aws_caller_identity.current", shape = "box"]
		"[root] module.lambda_authz.data.aws_iam_policy_document.dydb_app_role_map_iam_policy (expand)" [label = "module.lambda_authz.data.aws_iam_policy_document.dydb_app_role_map_iam_policy", shape = "box"]
		"[root] module.lambda_authz.data.aws_s3_bucket_object.lambda_artifact (expand)" [label = "module.lambda_authz.data.aws_s3_bucket_object.lambda_artifact", shape = "box"]
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)" [label = "module.lambda_authz.module.iam_app_role_map.aws_iam_role.role", shape = "box"]
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_full_access (expand)" [label = "module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_full_access", shape = "box"]
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_statement (expand)" [label = "module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_statement", shape = "box"]
		"[root] module.lambda_authz.module.iam_app_role_map.data.aws_caller_identity.current (expand)" [label = "module.lambda_authz.module.iam_app_role_map.data.aws_caller_identity.current", shape = "box"]
		"[root] module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.assume_role_policy (expand)" [label = "module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.assume_role_policy", shape = "box"]
		"[root] module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.full_access (expand)" [label = "module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.full_access", shape = "box"]
		"[root] module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.statements (expand)" [label = "module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.statements", shape = "box"]
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.data.external.terraform_version (expand)" [label = "module.lambda_authz.module.iam_app_role_map.module.standard_tags.data.external.terraform_version", shape = "box"]
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.time_static.timestamp (expand)" [label = "module.lambda_authz.module.iam_app_role_map.module.standard_tags.time_static.timestamp", shape = "box"]
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)" [label = "module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role", shape = "box"]
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_full_access (expand)" [label = "module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_full_access", shape = "box"]
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_statement (expand)" [label = "module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_statement", shape = "box"]
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_caller_identity.current (expand)" [label = "module.lambda_authz.module.lambda_authz_exec_role.data.aws_caller_identity.current", shape = "box"]
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.assume_role_policy (expand)" [label = "module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.assume_role_policy", shape = "box"]
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.full_access (expand)" [label = "module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.full_access", shape = "box"]
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.statements (expand)" [label = "module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.statements", shape = "box"]
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.data.external.terraform_version (expand)" [label = "module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.data.external.terraform_version", shape = "box"]
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.time_static.timestamp (expand)" [label = "module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.time_static.timestamp", shape = "box"]
		"[root] module.lambda_authz.module.standard_tags.data.external.terraform_version (expand)" [label = "module.lambda_authz.module.standard_tags.data.external.terraform_version", shape = "box"]
		"[root] module.lambda_authz.module.standard_tags.time_static.timestamp (expand)" [label = "module.lambda_authz.module.standard_tags.time_static.timestamp", shape = "box"]
		"[root] module.lambda_authz.null_resource.copy_signed_artifact (expand)" [label = "module.lambda_authz.null_resource.copy_signed_artifact", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/external\"]" [label = "provider[\"registry.terraform.io/hashicorp/external\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/null\"]" [label = "provider[\"registry.terraform.io/hashicorp/null\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/time\"]" [label = "provider[\"registry.terraform.io/hashicorp/time\"]", shape = "diamond"]
		"[root] local.namespace (expand)" -> "[root] local.environment (expand)"
		"[root] local.s3_bucket_key (expand)" -> "[root] local.s3_bucket_key_base (expand)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.lambda_authz (close)"
		"[root] module.lambda_authz (close)" -> "[root] module.lambda_authz.aws_lambda_permission.api_gw_lambda_permission (expand)"
		"[root] module.lambda_authz (close)" -> "[root] module.lambda_authz.local.api_gw_role_name (expand)"
		"[root] module.lambda_authz (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (close)"
		"[root] module.lambda_authz (close)" -> "[root] module.lambda_authz.module.standard_tags (close)"
		"[root] module.lambda_authz (close)" -> "[root] module.lambda_authz.output.dydb_app_roles (expand)"
		"[root] module.lambda_authz (close)" -> "[root] module.lambda_authz.output.dydb_authz_id (expand)"
		"[root] module.lambda_authz (close)" -> "[root] module.lambda_authz.output.iam_app_roles (expand)"
		"[root] module.lambda_authz (close)" -> "[root] module.lambda_authz.output.lambda_authorizer (expand)"
		"[root] module.lambda_authz (close)" -> "[root] module.lambda_authz.output.lambda_authorizer_iam_role (expand)"
		"[root] module.lambda_authz.aws_api_gateway_authorizer.api_gw_authorizer (expand)" -> "[root] module.lambda_authz.aws_lambda_function.lambda_authz (expand)"
		"[root] module.lambda_authz.aws_api_gateway_authorizer.api_gw_authorizer (expand)" -> "[root] module.lambda_authz.local.api_gw_authorizer_name (expand)"
		"[root] module.lambda_authz.aws_api_gateway_authorizer.api_gw_authorizer (expand)" -> "[root] module.lambda_authz.var.authorizer_cache_ttl (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)" -> "[root] module.lambda_authz.local.hash_key_name (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)" -> "[root] module.lambda_authz.local.hash_key_type (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)" -> "[root] module.lambda_authz.local.range_key_name (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)" -> "[root] module.lambda_authz.local.range_key_type (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)" -> "[root] module.lambda_authz.local.table_name (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)" -> "[root] module.lambda_authz.module.standard_tags.output.standard-tags (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)" -> "[root] module.lambda_authz.var.dynamodb_config (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_authz.aws_dynamodb_table_item.dydb_app_role_map (expand)" -> "[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table_item.dydb_app_role_map (expand)" -> "[root] module.lambda_authz.data.aws_iam_policy_document.dydb_app_role_map_iam_policy (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table_item.dydb_app_role_map (expand)" -> "[root] module.lambda_authz.local.app_role_hash_key_value (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table_item.dydb_app_role_map (expand)" -> "[root] module.lambda_authz.local.app_role_policy_attr_name (expand)"
		"[root] module.lambda_authz.aws_dynamodb_table_item.dydb_app_role_map (expand)" -> "[root] module.lambda_authz.local.app_role_policy_attr_type (expand)"
		"[root] module.lambda_authz.aws_lambda_code_signing_config.lambda_csc (expand)" -> "[root] module.lambda_authz.local.code_signing_config_description (expand)"
		"[root] module.lambda_authz.aws_lambda_code_signing_config.lambda_csc (expand)" -> "[root] module.lambda_authz.local.code_signing_config_policy (expand)"
		"[root] module.lambda_authz.aws_lambda_code_signing_config.lambda_csc (expand)" -> "[root] module.lambda_authz.local.signing_profile_version_arns (expand)"
		"[root] module.lambda_authz.aws_lambda_code_signing_config.lambda_csc (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_authz.aws_lambda_function.lambda_authz (expand)" -> "[root] module.lambda_authz.aws_lambda_code_signing_config.lambda_csc (expand)"
		"[root] module.lambda_authz.aws_lambda_function.lambda_authz (expand)" -> "[root] module.lambda_authz.data.aws_s3_bucket_object.lambda_artifact (expand)"
		"[root] module.lambda_authz.aws_lambda_function.lambda_authz (expand)" -> "[root] module.lambda_authz.local.env_vars_base64 (expand)"
		"[root] module.lambda_authz.aws_lambda_function.lambda_authz (expand)" -> "[root] module.lambda_authz.local.function_config (expand)"
		"[root] module.lambda_authz.aws_lambda_function.lambda_authz (expand)" -> "[root] module.lambda_authz.local.function_name (expand)"
		"[root] module.lambda_authz.aws_lambda_function.lambda_authz (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.output.role_arn (expand)"
		"[root] module.lambda_authz.aws_lambda_function.lambda_authz (expand)" -> "[root] module.lambda_authz.var.debug_mode (expand)"
		"[root] module.lambda_authz.aws_lambda_permission.api_gw_lambda_permission (expand)" -> "[root] module.lambda_authz.aws_api_gateway_authorizer.api_gw_authorizer (expand)"
		"[root] module.lambda_authz.data.aws_caller_identity.current (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_authz.data.aws_iam_policy_document.dydb_app_role_map_iam_policy (expand)" -> "[root] module.lambda_authz.local.dydb_app_role_map (expand)"
		"[root] module.lambda_authz.data.aws_s3_bucket_object.lambda_artifact (expand)" -> "[root] module.lambda_authz.null_resource.copy_signed_artifact (expand)"
		"[root] module.lambda_authz.data.aws_s3_bucket_object.lambda_artifact (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_authz.local.api_gw_authorizer_name (expand)" -> "[root] module.lambda_authz.var.namespace (expand)"
		"[root] module.lambda_authz.local.api_gw_base_arn (expand)" -> "[root] module.lambda_authz.data.aws_caller_identity.current (expand)"
		"[root] module.lambda_authz.local.api_gw_base_arn (expand)" -> "[root] module.lambda_authz.var.api_gateway_id (expand)"
		"[root] module.lambda_authz.local.api_gw_base_arn (expand)" -> "[root] module.lambda_authz.var.aws_region (expand)"
		"[root] module.lambda_authz.local.api_gw_execute_base_arn (expand)" -> "[root] module.lambda_authz.local.api_gw_base_arn (expand)"
		"[root] module.lambda_authz.local.api_gw_execute_base_arn (expand)" -> "[root] module.lambda_authz.var.environment (expand)"
		"[root] module.lambda_authz.local.api_gw_role_name (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.app_role_hash_key_value (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.app_role_map_flatten (expand)" -> "[root] module.lambda_authz.local.api_gw_execute_base_arn (expand)"
		"[root] module.lambda_authz.local.app_role_map_flatten (expand)" -> "[root] module.lambda_authz.var.app_role_map (expand)"
		"[root] module.lambda_authz.local.app_role_policy_attr_name (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.app_role_policy_attr_type (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.app_role_prefix (expand)" -> "[root] module.lambda_authz.var.namespace (expand)"
		"[root] module.lambda_authz.local.auth_hash_key_value (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.code_signing_config_description (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.code_signing_config_policy (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.dydb_app_role_map (expand)" -> "[root] module.lambda_authz.local.app_role_map_flatten (expand)"
		"[root] module.lambda_authz.local.dydb_app_role_map (expand)" -> "[root] module.lambda_authz.var.app_role_map_store (expand)"
		"[root] module.lambda_authz.local.dydb_app_roles (expand)" -> "[root] module.lambda_authz.aws_dynamodb_table_item.dydb_app_role_map (expand)"
		"[root] module.lambda_authz.local.env_vars (expand)" -> "[root] module.lambda_authz.local.auth_hash_key_value (expand)"
		"[root] module.lambda_authz.local.env_vars (expand)" -> "[root] module.lambda_authz.local.dydb_app_roles (expand)"
		"[root] module.lambda_authz.local.env_vars (expand)" -> "[root] module.lambda_authz.local.iam_app_roles (expand)"
		"[root] module.lambda_authz.local.env_vars (expand)" -> "[root] module.lambda_authz.var.cache_lifetime (expand)"
		"[root] module.lambda_authz.local.env_vars (expand)" -> "[root] module.lambda_authz.var.oidc_endpoint (expand)"
		"[root] module.lambda_authz.local.env_vars (expand)" -> "[root] module.lambda_authz.var.roles_claim_name (expand)"
		"[root] module.lambda_authz.local.env_vars (expand)" -> "[root] module.lambda_authz.var.tenant_id (expand)"
		"[root] module.lambda_authz.local.env_vars (expand)" -> "[root] module.lambda_authz.var.token_http_header (expand)"
		"[root] module.lambda_authz.local.env_vars_base64 (expand)" -> "[root] module.lambda_authz.local.env_vars (expand)"
		"[root] module.lambda_authz.local.function_config (expand)" -> "[root] module.lambda_authz.local.memory_size_map (expand)"
		"[root] module.lambda_authz.local.function_config (expand)" -> "[root] module.lambda_authz.var.api_gateway_id (expand)"
		"[root] module.lambda_authz.local.function_config (expand)" -> "[root] module.lambda_authz.var.lambda_memory_size (expand)"
		"[root] module.lambda_authz.local.function_config (expand)" -> "[root] module.lambda_authz.var.lambda_memory_t_shirt (expand)"
		"[root] module.lambda_authz.local.function_name (expand)" -> "[root] module.lambda_authz.var.namespace (expand)"
		"[root] module.lambda_authz.local.function_source_code (expand)" -> "[root] module.lambda_authz.var.lambda_version (expand)"
		"[root] module.lambda_authz.local.hash_key_name (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.hash_key_type (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.iam_app_role_map (expand)" -> "[root] module.lambda_authz.local.app_role_map_flatten (expand)"
		"[root] module.lambda_authz.local.iam_app_role_map (expand)" -> "[root] module.lambda_authz.var.app_role_map_store (expand)"
		"[root] module.lambda_authz.local.iam_app_roles (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (close)"
		"[root] module.lambda_authz.local.memory_size_map (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.range_key_name (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.range_key_type (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.role_name (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.signing_profile_version_arns (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.local.table_name (expand)" -> "[root] module.lambda_authz.var.namespace (expand)"
		"[root] module.lambda_authz.local.timestamp (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_full_access (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_statement (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.data.aws_caller_identity.current (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags (close)"
		"[root] module.lambda_authz.module.iam_app_role_map (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.output.role_arn (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.output.role_id (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.output.role_name (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.tags (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map (expand)" -> "[root] module.lambda_authz.local.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.assume_role_policy (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.local.role_name (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.output.standard-tags (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.description (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.policy_arns (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_full_access (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_full_access (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.full_access (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_full_access (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.local.inline_policy_full_access_name (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_statement (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_statement (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.statements (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role_policy.inline_statement (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.local.inline_policy_statement_name (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.data.aws_caller_identity.current (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.principals (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.full_access (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.full_access (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.data.aws_iam_policy_document.statements (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.statements (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.local.inline_policy_full_access_name (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.local.inline_policy_statement_name (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.local.role_name (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.namespace (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.local.role_name (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.role_name (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.output.standard-tags (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.data.external.terraform_version (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.data.external.terraform_version (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.data.external.terraform_version (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.local.timestamp (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.application_id (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.application_name (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.created_by_email (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.environment (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.local.timestamp (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.time_static.timestamp (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.output.standard-tags (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.local.standard-tags (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.time_static.timestamp (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.time_static.timestamp (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/time\"]"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.application_id (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.application_id (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.application_id (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.application_name (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.application_name (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.application_name (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.created_by_email (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.created_by_email (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.created_by_email (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.environment (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.var.environment (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.var.environment (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.output.role_arn (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.output.role_id (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.output.role_name (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map.aws_iam_role.role (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.application_id (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.application_id (expand)" -> "[root] module.lambda_authz.var.application_id (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.application_name (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.application_name (expand)" -> "[root] module.lambda_authz.var.application_name (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.created_by_email (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.created_by_email (expand)" -> "[root] module.lambda_authz.var.created_by_email (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.description (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.environment (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.full_access (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.namespace (expand)" -> "[root] module.lambda_authz.local.app_role_prefix (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.namespace (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.policy_arns (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.principals (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.role_name (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.statements (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.iam_app_role_map.var.tags (expand)" -> "[root] module.lambda_authz.module.iam_app_role_map (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_full_access (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_statement (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_caller_identity.current (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags (close)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.output.role_arn (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.output.role_id (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.output.role_name (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.tags (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.assume_role_policy (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.local.role_name (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.output.standard-tags (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.description (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.policy_arns (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_full_access (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_full_access (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.full_access (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_full_access (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.local.inline_policy_full_access_name (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_statement (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_statement (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.statements (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_statement (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.local.inline_policy_statement_name (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_caller_identity.current (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.principals (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.assume_role_policy (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.full_access (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.full_access (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.full_access (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_iam_policy_document.statements (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.statements (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.local.inline_policy_full_access_name (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.local.inline_policy_statement_name (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.local.role_name (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.namespace (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.local.role_name (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.role_name (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.output.standard-tags (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.data.external.terraform_version (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.data.external.terraform_version (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.data.external.terraform_version (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.local.timestamp (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.application_id (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.application_name (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.created_by_email (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.environment (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.local.timestamp (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.time_static.timestamp (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.output.standard-tags (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.local.standard-tags (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.time_static.timestamp (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.time_static.timestamp (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/time\"]"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.application_id (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.application_id (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.application_id (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.application_name (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.application_name (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.application_name (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.created_by_email (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.created_by_email (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.created_by_email (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.environment (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.var.environment (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.var.environment (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.output.role_arn (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.output.role_id (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.output.role_name (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role.role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.application_id (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.application_id (expand)" -> "[root] module.lambda_authz.var.application_id (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.application_name (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.application_name (expand)" -> "[root] module.lambda_authz.var.application_name (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.created_by_email (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.created_by_email (expand)" -> "[root] module.lambda_authz.var.created_by_email (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.description (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.description (expand)" -> "[root] module.lambda_authz.var.namespace (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.environment (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.environment (expand)" -> "[root] module.lambda_authz.var.environment (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.full_access (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.namespace (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.namespace (expand)" -> "[root] module.lambda_authz.var.namespace (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.policy_arns (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.principals (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.role_name (expand)" -> "[root] module.lambda_authz.local.role_name (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.role_name (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.statements (expand)" -> "[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.statements (expand)" -> "[root] module.lambda_authz.data.aws_caller_identity.current (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.statements (expand)" -> "[root] module.lambda_authz.local.app_role_prefix (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.statements (expand)" -> "[root] module.lambda_authz.local.function_name (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.statements (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.statements (expand)" -> "[root] module.lambda_authz.var.aws_region (expand)"
		"[root] module.lambda_authz.module.lambda_authz_exec_role.var.tags (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role (expand)"
		"[root] module.lambda_authz.module.standard_tags (close)" -> "[root] module.lambda_authz.module.standard_tags.output.standard-tags (expand)"
		"[root] module.lambda_authz.module.standard_tags (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.module.standard_tags.data.external.terraform_version (expand)" -> "[root] module.lambda_authz.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.standard_tags.data.external.terraform_version (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"]"
		"[root] module.lambda_authz.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.standard_tags.data.external.terraform_version (expand)"
		"[root] module.lambda_authz.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.standard_tags.local.timestamp (expand)"
		"[root] module.lambda_authz.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.standard_tags.var.application_id (expand)"
		"[root] module.lambda_authz.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.standard_tags.var.application_name (expand)"
		"[root] module.lambda_authz.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.standard_tags.var.created_by_email (expand)"
		"[root] module.lambda_authz.module.standard_tags.local.standard-tags (expand)" -> "[root] module.lambda_authz.module.standard_tags.var.environment (expand)"
		"[root] module.lambda_authz.module.standard_tags.local.timestamp (expand)" -> "[root] module.lambda_authz.module.standard_tags.time_static.timestamp (expand)"
		"[root] module.lambda_authz.module.standard_tags.output.standard-tags (expand)" -> "[root] module.lambda_authz.module.standard_tags.local.standard-tags (expand)"
		"[root] module.lambda_authz.module.standard_tags.time_static.timestamp (expand)" -> "[root] module.lambda_authz.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.standard_tags.time_static.timestamp (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/time\"]"
		"[root] module.lambda_authz.module.standard_tags.var.application_id (expand)" -> "[root] module.lambda_authz.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.standard_tags.var.application_id (expand)" -> "[root] module.lambda_authz.var.application_id (expand)"
		"[root] module.lambda_authz.module.standard_tags.var.application_name (expand)" -> "[root] module.lambda_authz.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.standard_tags.var.application_name (expand)" -> "[root] module.lambda_authz.var.application_name (expand)"
		"[root] module.lambda_authz.module.standard_tags.var.created_by_email (expand)" -> "[root] module.lambda_authz.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.standard_tags.var.created_by_email (expand)" -> "[root] module.lambda_authz.var.created_by_email (expand)"
		"[root] module.lambda_authz.module.standard_tags.var.environment (expand)" -> "[root] module.lambda_authz.module.standard_tags (expand)"
		"[root] module.lambda_authz.module.standard_tags.var.environment (expand)" -> "[root] module.lambda_authz.var.environment (expand)"
		"[root] module.lambda_authz.null_resource.copy_signed_artifact (expand)" -> "[root] module.lambda_authz.local.function_source_code (expand)"
		"[root] module.lambda_authz.null_resource.copy_signed_artifact (expand)" -> "[root] module.lambda_authz.local.timestamp (expand)"
		"[root] module.lambda_authz.null_resource.copy_signed_artifact (expand)" -> "[root] module.lambda_authz.var.source_code_dest (expand)"
		"[root] module.lambda_authz.null_resource.copy_signed_artifact (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"]"
		"[root] module.lambda_authz.null_resource.copy_signed_artifact (expand)" -> "[root] provisioner.local-exec"
		"[root] module.lambda_authz.output.dydb_app_roles (expand)" -> "[root] module.lambda_authz.local.dydb_app_roles (expand)"
		"[root] module.lambda_authz.output.dydb_authz_id (expand)" -> "[root] module.lambda_authz.aws_dynamodb_table.dydb_authz (expand)"
		"[root] module.lambda_authz.output.iam_app_roles (expand)" -> "[root] module.lambda_authz.local.iam_app_roles (expand)"
		"[root] module.lambda_authz.output.lambda_authorizer (expand)" -> "[root] module.lambda_authz.aws_lambda_function.lambda_authz (expand)"
		"[root] module.lambda_authz.output.lambda_authorizer_iam_role (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.output.role_arn (expand)"
		"[root] module.lambda_authz.output.lambda_authorizer_iam_role (expand)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.output.role_name (expand)"
		"[root] module.lambda_authz.var.api_gateway_id (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.app_role_map (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.app_role_map_store (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.application_id (expand)" -> "[root] local.application_id (expand)"
		"[root] module.lambda_authz.var.application_id (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.application_name (expand)" -> "[root] local.application_name (expand)"
		"[root] module.lambda_authz.var.application_name (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.authorizer_cache_ttl (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.aws_region (expand)" -> "[root] local.aws_region (expand)"
		"[root] module.lambda_authz.var.aws_region (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.cache_lifetime (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.created_by_email (expand)" -> "[root] local.created_by_email (expand)"
		"[root] module.lambda_authz.var.created_by_email (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.debug_mode (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.dynamodb_config (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.environment (expand)" -> "[root] local.environment (expand)"
		"[root] module.lambda_authz.var.environment (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.lambda_memory_size (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.lambda_memory_t_shirt (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.lambda_version (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.namespace (expand)" -> "[root] local.namespace (expand)"
		"[root] module.lambda_authz.var.namespace (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.oidc_endpoint (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.roles_claim_name (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.source_code_dest (expand)" -> "[root] local.s3_bucket_key (expand)"
		"[root] module.lambda_authz.var.source_code_dest (expand)" -> "[root] local.s3_bucket_name (expand)"
		"[root] module.lambda_authz.var.source_code_dest (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.tenant_id (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] module.lambda_authz.var.token_http_header (expand)" -> "[root] module.lambda_authz (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_authz.aws_lambda_permission.api_gw_lambda_permission (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_full_access (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.aws_iam_role_policy.inline_statement (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.data.aws_caller_identity.current (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] local.aws_region (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.data.external.terraform_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.data.external.terraform_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)" -> "[root] module.lambda_authz.module.standard_tags.data.external.terraform_version (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)" -> "[root] module.lambda_authz.null_resource.copy_signed_artifact (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/time\"] (close)" -> "[root] module.lambda_authz.module.iam_app_role_map.module.standard_tags.time_static.timestamp (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/time\"] (close)" -> "[root] module.lambda_authz.module.lambda_authz_exec_role.module.standard_tags.time_static.timestamp (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/time\"] (close)" -> "[root] module.lambda_authz.module.standard_tags.time_static.timestamp (expand)"
		"[root] provisioner.local-exec (close)" -> "[root] module.lambda_authz.null_resource.copy_signed_artifact (expand)"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/external\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/null\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/time\"] (close)"
		"[root] root" -> "[root] provisioner.local-exec (close)"
	}
}

